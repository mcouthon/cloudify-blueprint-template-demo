tosca_definitions_version: cloudify_dsl_1_3

description: General hello world blueprint

imports:
  - http://www.getcloudify.org/spec/cloudify/4.4.dev1/types.yaml
  - hello_world/{{ impl }}.yaml

  {% if not skip_monitoring %}
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.6/plugin.yaml
  {% endif %}

inputs:
  webserver_port:
    description: The HTTP web server port
    default: 8080
  agent_user:
    description: User name used when SSH-ing into the started machine
  agent_private_key_path:
    description: >
      Path to a private key that resides on the management machine.
      SSH-ing into agent machines will be done with this key.


node_templates:
  vm:
    type: cloudify.nodes.Server
    properties:
      agent_config:
        user: { get_input: agent_user }
        key: { get_input: agent_private_key_path }
    # Singlehost blueprint doesn't require those relationships
    {% if impl != "singlehost" %}
    relationships:
      - type: server_connected_to_ip
        target: ip
      - type: server_connected_to_security_group
        target: security_group
      - type: server_connected_to_keypair
        target: keypair
      - type: server_connected_to_network
        target: network
    {% endif %}

    # By default, we want to enable monitoring
    {% if not skip_monitoring %}
    interfaces:
      ###########################################################
      # We are infact telling cloudify to install a diamond
      # monitoring agent on the server.
      #
      # (see https://github.com/BrightcoveOS/Diamond)
      ###########################################################
      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                interval: 1
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}
    {% endif %}
  http_web_server:
    type: cloudify.nodes.WebServer
    properties:
      port: { get_input: webserver_port }
    relationships:
      - type: cloudify.relationships.contained_in
        target: vm
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/configure.sh
        start: scripts/start.sh
        stop: scripts/stop.sh
